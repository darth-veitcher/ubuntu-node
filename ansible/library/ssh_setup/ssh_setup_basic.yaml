# file: library/ssh_setup/ssh_setup_basic.yaml

# First, check {{ ansible_user}} with {{ ansible_port }}
- name: Check {{ ansible_user }}@{{ ansible_host | default(inventory_hostname) }} port {{ ansible_port }}
  become: no
  command: ssh -q -o BatchMode=yes -o ConnectTimeout=3 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p {{ ansible_port }} {{ ansible_user }}@{{ ansible_host | default(inventory_hostname) }} "echo OK"
  delegate_to: 127.0.0.1
  changed_when: false
  failed_when: false
  register: check_ansible_user
- set_fact: 
    ssh_details_known: true
  when: check_ansible_user.rc == 0
- set_fact: 
    ssh_details_known: false
  when: check_ansible_user.rc > 0

# Second, check if variable user with the port defined as a variable and our variable ssh key (ie. what we want to set it to finally)
- block:
  - name: Check {{ deploy_user_name }}@{{ ansible_host | default(inventory_hostname) }} | with {{ deploy_user_ssh_private_key }} | port {{ common_ssh_port }}
    become: no
    command: ssh -q -o BatchMode=yes -o ConnectTimeout=3 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p {{ common_ssh_port }} -i {{ deploy_user_ssh_private_key }} {{ deploy_user_name }}@{{ ansible_host | default(inventory_hostname) }} "echo OK"
    delegate_to: 127.0.0.1
    changed_when: false
    failed_when: false
    register: check_ansible_user_no_key
  - name: Set ansible_port to {{ common_ssh_port }}
    set_fact:
      ansible_port: "{{ common_ssh_port }}"
      ansible_user: "{{ deploy_user_name }}"
      ansible_ssh_private_key_file: "{{ deploy_user_ssh_private_key }}"
      ssh_details_known: true
    when: check_ansible_user_no_key.rc == 0
  when: ssh_details_known is false

# Third, check {{ ansible_user}} with the port defined as a variable (ie. what we want to set it to finally)
- block:
  - name: Check {{ ansible_user }}@{{ ansible_host | default(inventory_hostname) }} | port {{ common_ssh_port }}
    become: no
    command: ssh -q -o BatchMode=yes -o ConnectTimeout=3 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p {{ common_ssh_port }} -i {{ ansible_ssh_private_key_file }} {{ ansible_user }}@{{ ansible_host | default(inventory_hostname) }} "echo OK"
    delegate_to: 127.0.0.1
    changed_when: false
    failed_when: false
    register: check_ansible_user_no_key
  - name: Set ansible_port to {{ common_ssh_port }}
    set_fact:
      ansible_port: "{{ common_ssh_port }}"
      ssh_details_known: true
    when: check_ansible_user_no_key.rc == 0
  when: ssh_details_known is false

# Fallback, check {{ ansible_user}} with port 22
- block:
  - name: Check {{ ansible_user }}@{{ ansible_host | default(inventory_hostname) }} | port 22
    become: no
    command: ssh -q -o BatchMode=yes -o ConnectTimeout=3 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i {{ ansible_ssh_private_key_file }} {{ ansible_user }}@{{ ansible_host | default(inventory_hostname) }} "echo OK"
    delegate_to: 127.0.0.1
    changed_when: false
    failed_when: false
    register: check_ansible_user_no_key
  - name: Set ansible_port to 22
    set_fact:
      ansible_port: 22
      ssh_details_known: true
    when: check_ansible_user_no_key.rc == 0
  when: ssh_details_known is false

- debug:
    msg: "User: {{ ansible_user }} | Port: {{ ansible_port }} | Key: none }}"
  when: ssh_details_known